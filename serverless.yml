org: GRIMANIEL

custom:
  secrets: ${file(secrets.json)}
  tableName: "table-tokens"
  #tableTokens: "table-tokens"
  DATABASE_NAME: rxp_${self:provider.stage}
service: sls-jwt-authorizer
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    AWS_ID: ${self:custom.secrets.AWS_ID}
    TOKENPK: ${self:custom.secrets.TOKENPK}
    DATABASE_ENVIRONMENT: ${self:custom.DATABASE_NAME}
    TBL_TOKEN: tokens
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource: "arn:aws:dynamodb:us-east-1:${self:custom.secrets.AWS_ID}:table/${self:custom.tableName}"

functions:
  verify-token:
    handler: functions/authorize.handler

  me:
    handler: functions/me.handler
    events:
      - http:
          path: me
          method: get
          cors: true
          authorizer:
            name: verify-token
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 3600
  login:
    handler: functions/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true
  tokens:
    handler: functions/tokens.handler
    events:
      - http:
          path: tokens
          method: post
          cors: true
  register:
    handler: functions/register.handler
    events:
      - http:
          path: register
          method: post
          cors: true
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
